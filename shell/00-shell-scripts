#!/bin/bash 
#Colours
greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"


#Ctrl-C 
function ctrl_c(){
  echo -e "${redColour}\n\n[!] Saliendo...\n" 
  echo -e "${endColour}"
  tput cnorm; #before exit recuperate cursor
  exit 1 # exit code Not Succesfully 
}
#Ctrl+C
trap ctrl_c INT

function usage(){
  clear
  echo -e "\n"
  echo -e "${purpleColour}usage: "
  echo -e "${purpleColour}./01-port-scanner.sh <target ip> <target port>"
  echo -e "${yellowColour}remeber set /bin/bash before run script $endColour}"
  echp -e "${purpleColour}.............................................."
  echo -e "\n"
}

#p a r a m e t e r s 
if [ $# = 1 ]
then 
 IP_TARGET=$1
  echo "ip target: ${IP_TARGET}"
  #hide cursor
  tput civis 
  echo

  #t o  m a n a g e  t h r e a d s 
  counter=0
  top_counter=20
  #-------------------------------

  #save on port variable all ports with seq 
  for port in $(seq 1 65535);do
    if [ $counter == $top_counter ];then 
      #its going to run 20 threads and wait to end for run the next set of 20 threads
      echo -e "\n${yellowColor}[+]${endColour}${grayColour} r u n n i n g  20 t r e a d s [$top_counter/65535]$endColour}\n"
      wait
      sleep 5 # to  s h o w i n g  y o u  h o w  t o  w o r k s  t h e  t h r e a d s  
      let top_counter+=20 
    fi
    #to avoid block query you can define a timelive max 1 second for command 
    #check if port is open 
    timeout 1 bash -c "echo '' > /dev/tcp/${IP_TARGET}/$port" 2>/dev/null && echo -e "${yellowColour}[+] ${endColour}Puerto ${purpleColour}$port${endColour} - ${endColour}${greenColour}open${endColour}" & 
    #& for threads 
    let counter+=1 # i f  n o t  l e t ,  t h e  s u m  w o u l d  a s  s t r i n g  01 02  n o t  1 2 3 ...
  done; wait # to recuperate the cursor
  tput cnorm #recuperation cursor
else 
 usage
fi

#-------------------------------------
#